spring.application.name=tracking-aircraft-aircraft
server.port=9090

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.database=0

# Redis Connection Pool
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=-1ms

# Redis Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false
spring.cache.redis.key-prefix=tracking:
spring.cache.redis.use-key-prefix=true

# Custom Redis Configuration for Tracking System
app.redis.cache.current-positions.ttl=300
app.redis.cache.aircraft-data.ttl=600  
app.redis.cache.vessel-data.ttl=600
app.redis.cache.user-sessions.ttl=1800
app.redis.cache.api-responses.ttl=120
app.redis.cache.alerts.ttl=3600
app.redis.cache.statistics.ttl=900

spring.datasource.url=jdbc:postgresql://localhost:5432/ship_tracking_db
spring.datasource.username=your_username
spring.datasource.password=your_password
spring.security.user.name=admin
spring.security.user.password=admin_password
spring.security.user.roles=ADMIN
# Don't try to update the schema automatically
#spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.ddl-auto=update
# Explicitly set the PostGIS dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisPG10Dialect

# Swagger UI configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# JWT Configuration
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000
#spring.main.allow-circular-references=true
# Admin user configuration
admin.username=admin
admin.password=admin123
admin.email=admin@example.com

#kafka configuration
# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:29092

# Consumer Configuration
spring.kafka.consumer.group-id=tracking-group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=aircraftData:com.phamnam.tracking_vessel_flight.dto.request.AircraftTrackingRequest,vesselData:com.phamnam.tracking_vessel_flight.dto.request.VesselTrackingRequest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.fetch-max-wait=500ms
spring.kafka.consumer.session-timeout=30000ms
spring.kafka.consumer.heartbeat-interval=3000ms

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=5
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.compression-type=snappy
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

# Kafka Streams Configuration - Commented out since not using streams
# spring.kafka.streams.application-id=tracking-stream-processor
# spring.kafka.streams.bootstrap-servers=${spring.kafka.bootstrap-servers}
# spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
# spring.kafka.streams.properties.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
# spring.kafka.streams.properties.commit.interval.ms=1000
# spring.kafka.streams.properties.processing.guarantee=exactly_once_v2
# spring.kafka.streams.properties.state.dir=/tmp/kafka-streams
# spring.kafka.streams.properties.replication.factor=1
# spring.kafka.streams.properties.num.stream.threads=4

# Kafka Topics Configuration
app.kafka.topics.raw-aircraft-data=raw-aircraft-data
app.kafka.topics.raw-vessel-data=raw-vessel-data
app.kafka.topics.processed-aircraft-data=processed-aircraft-data
app.kafka.topics.processed-vessel-data=processed-vessel-data
app.kafka.topics.aggregated-tracking-data=aggregated-tracking-data
app.kafka.topics.alerts=alerts
app.kafka.topics.dead-letter=dead-letter-queue
app.kafka.topics.data-quality-issues=data-quality-issues
app.kafka.topics.realtime-positions=realtime-positions
app.kafka.topics.historical-data=historical-data
app.kafka.topics.notifications=notifications
app.kafka.topics.websocket-updates=websocket-updates

# Topic Configurations
app.kafka.topic-config.partitions=12
app.kafka.topic-config.replication-factor=1
app.kafka.topic-config.retention-ms=604800000
app.kafka.topic-config.segment-ms=86400000
app.kafka.topic-config.cleanup-policy=delete
app.kafka.topic-config.compression-type=snappy

# Stream Processing Configuration - Commented out since not using streams
# app.kafka.streams.window-size-ms=30000
# app.kafka.streams.grace-period-ms=5000
# app.kafka.streams.suppress-duration-ms=10000
# app.kafka.streams.aggregation-window-ms=60000

# Legacy topics for backward compatibility
app.kafka.aircraft-topic=${app.kafka.topics.processed-aircraft-data}
app.kafka.ship-topic=${app.kafka.topics.processed-vessel-data}

# TimescaleDB Configuration
timescale.enabled=true
timescale.ship-tracking-table=ship_tracking
timescale.aircraft-tracking-table=aircraft_tracking
timescale.time-column=timestamp

# Data retention policy
#app.data.hot-storage.retention=24h
#app.data.warm-storage.retention=30d

# Data retention configuration
tracking.data.hot-storage.ttl-hours=24
tracking.data.warm-storage.ttl-days=30

# External API Configuration - Enable with smart checking
external.api.enabled=true

# FlightRadar24 Configuration - Enable with fallback
external.api.flightradar24.enabled=true
external.api.flightradar24.base-url=http://localhost:3001/mock/flightradar24
external.api.flightradar24.api-key=mock_key
external.api.flightradar24.poll-interval=30000
external.api.flightradar24.timeout=10000
external.api.flightradar24.retry-attempts=3

# MarineTraffic Configuration - Enable with fallback
external.api.marinetraffic.enabled=true
external.api.marinetraffic.base-url=http://localhost:3001/mock/marinetraffic
external.api.marinetraffic.api-key=mock_key
external.api.marinetraffic.poll-interval=60000
external.api.marinetraffic.timeout=15000
external.api.marinetraffic.retry-attempts=3

# Geographic bounds (Vietnam area)
external.api.bounds.min-latitude=8.5
external.api.bounds.max-latitude=23.5
external.api.bounds.min-longitude=102.0
external.api.bounds.max-longitude=109.5